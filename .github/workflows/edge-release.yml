name: Update rolling "Microsoft Edge" release

on:
  schedule:
    - cron: "17 */4 * * *"   # every 4 hours
  workflow_dispatch: {}

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Fetch Edge Updates API
        run: |
          set -e
          curl -fsSL "https://edgeupdates.microsoft.com/api/products?view=enterprise" > edge.json

      - name: Parse latest Stable Windows x64
        id: parse
        run: |
          set -e
          VERSION=$(jq -r '
            .[] | select(.Product=="Stable")
            | .Releases[]? | .ProductVersion
          ' edge.json | sort -V | tail -n1)

          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            echo "Failed to get version"; exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Build a simple file with official Microsoft URLs + SHA256
          jq -r --arg VER "$VERSION" '
            .[] | select(.Product=="Stable")
            | .Releases[]? | select(.ProductVersion==$VER)
            | .Artifacts[]?
            | select(.Platform=="Windows" and .Architecture=="x64" and (.InstallerType=="msi" or .InstallerType=="exe"))
            | "- \(.InstallerType) â€¢ \(.ArtifactName)\n  URL: \(.Location)\n  SHA256: \(.Hash)\n"
          ' edge.json > links.txt

          mkdir -p out
          {
            echo "Microsoft Edge Stable (Windows x64)"
            echo "Version: $VERSION"
            echo
            cat links.txt
          } > out/edge-links.txt

      - name: Update the constant release
        uses: ncipollo/release-action@v1
        with:
          tag: Edge                  # <-- your fixed tag; change if yours is different
          name: Microsoft Edge       # <-- keep the release title constant
          body: |
            Channel: Stable
            Platform: Windows x64
            Version: ${{ steps.parse.outputs.version }}

            See attached file (edge-links.txt) for official Microsoft download URLs and SHA256 hashes.
          allowUpdates: true
          replacesArtifacts: true
          artifacts: out/edge-links.txt
          draft: false
          prerelease: false
